package routing

import Actors.PatientActor
import akka.actor.Props
import routing.PerRequest.WithActorRef
import spray.routing.{HttpServiceActor, Route}

object RestRouting {
    def props(): Props = Props(new RestRouting)
}

class RestRouting extends HttpServiceActor with PerRequestCreator {

    //def receive = runRoute(route)

    val petService = context.actorOf(Props[PatientActor])

//    val route = {
//        get {
//            path("patients") {
//                //getPatientHandler(GetPatients())
//            }
//        }
//    }

//    def getPatientHandler(message : RestMessage): Route =
//        ctx => perRequest(ctx, Props(new RequestProcessingActor(petService), message)
//            //sozdaem kazhdyi raz novogo actora i rabotaem s nim.
            //target = request
    
}